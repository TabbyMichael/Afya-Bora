generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  name          String
  phone         String?
  password      String
  addresses     Address[]
  orders        Order[]
  prescriptions Prescription[]
  reviews       Review[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Product {
  id                  String        @id @default(cuid())
  name                String
  description         String
  price              Float
  image              String
  category           Category      @relation(fields: [categoryId], references: [id])
  categoryId         String
  brand              String
  prescriptionRequired Boolean      @default(false)
  inStock            Boolean       @default(true)
  dosageForm         String
  packSize           String
  activeIngredients  String[]
  reviews            Review[]
  orderItems         OrderItem[]
  prescriptionItems  PrescriptionItem[]
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
}

model Category {
  id          String    @id @default(cuid())
  name        String
  slug        String    @unique
  image       String
  description String
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Order {
  id            String      @id @default(cuid())
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  items         OrderItem[]
  status        String
  total         Float
  address       Address     @relation(fields: [addressId], references: [id])
  addressId     String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model OrderItem {
  id        String  @id @default(cuid())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  price     Float
}

model Address {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  street     String
  city       String
  county     String
  postalCode String
  isDefault  Boolean  @default(false)
  orders     Order[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Prescription {
  id        String             @id @default(cuid())
  user      User               @relation(fields: [userId], references: [id])
  userId    String
  image     String
  status    String
  items     PrescriptionItem[]
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
}

model PrescriptionItem {
  id             String       @id @default(cuid())
  prescription   Prescription @relation(fields: [prescriptionId], references: [id])
  prescriptionId String
  product        Product      @relation(fields: [productId], references: [id])
  productId      String
  quantity       Int
}

model Review {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
} 